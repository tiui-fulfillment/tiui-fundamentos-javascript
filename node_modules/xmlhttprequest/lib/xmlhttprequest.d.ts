// src/xmlhttprequest.d.ts
declare module "xmlhttprequest" {
  class XMLHttpRequest {
    static UNSENT: number;
    static OPENED: number;
    static HEADERS_RECEIVED: number;
    static LOADING: number;
    static DONE: number;

    onreadystatechange: ((this: XMLHttpRequest, ev: Event) => any) | null;
    readyState: number;
    response: any;
    responseText: string;
    responseType: XMLHttpRequestResponseType;
    responseURL: string;
    responseXML: Document | null;
    status: number;
    statusText: string;
    timeout: number;
    upload: XMLHttpRequestUpload;
    withCredentials: boolean;

    open(method: string, url: string, async?: boolean, username?: string | null, password?: string | null): void;
    send(body?: Document | BodyInit | null): void;
    abort(): void;
    getAllResponseHeaders(): string;
    getResponseHeader(name: string): string | null;
    overrideMimeType(mime: string): void;
    setRequestHeader(name: string, value: string): void;
  }

  export { XMLHttpRequest };
}
